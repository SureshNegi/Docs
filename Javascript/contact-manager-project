Contact class?
class Contact {
   constructor(name, email) {
      this.name = name;
      this.email = email;
   }
}

Creating Object?
var c1 = new Contact("Jimi Hendrix", "jimi@rip.com");
var c2 = new Contact("Robert Fripp", "robert.fripp@kingcrimson.com");

ContactManager?
class ContactManager {
    constructor() {
        // when we build the contact manager, it
        // has an empty list of contacts
        this.listOfContacts = [];
    }
    add(contact) {
        this.listOfContacts.push(contact);
    }
    remove(contact) {
        // we iterate on the list of contacts until we find the contact
        // passed as a parameter (we say that they are equal if emails match)
        for(let i = 0; i < this.listOfContacts.length; i++) {
            var c = this.listOfContacts[i];
 
            if(c.email === contact.email) {
                // remove the contact at index i
                this.listOfContacts.splice(i, i);
                // stop/exit the loop
                break;
            }
         };
    }
    printContactsToConsole() {
        this.listOfContacts.forEach(function(c) {
            console.log(c.name);
        });
    };
    sort() {
    // As our array contains objects, we need to pass as argument
    // a method that can compare two contacts.
    // we use a class method, which is similar to the distance(p1, p2)
    // method we saw in the ES6 Point class in module 4
    // We always call such methods using the name of the class followed
    // by the dot operator
    this.listOfContacts.sort(ContactManager.compareByName);
}
// class method for comparing two contacts by name
static compareByName(c1, c2) {
    // JavaScript has built in capabilities for comparing strings
    // in alphabetical order
    if (c1.name < c2.name)
        return -1;
    if (c1.name > c2.name)
        return 1;
    return 0; // c1.name = c2.name
}
}
