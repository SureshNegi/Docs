https://docs.angularjs.org/api/ng/service/$compile

scope
The scope property can be false, true, or an object:
    false (default): No scope will be created for the directive. The directive will use its parent's scope.
    true: A new child scope that prototypically inherits from its parent will be created for the directive's element. 
    If multiple directives on the same element request a new scope, only one new scope is created.
    {...} (an object hash): A new "isolate" scope is created for the directive's template. 
    The 'isolate' scope differs from normal scope in that it does not prototypically inherit from its parent scope.
    This is useful when creating reusable components, which should not accidentally read or modify data in the parent scope.
    Note that an isolate scope directive without a template or templateUrl will not apply the isolate scope to its 
    children elements.
    
controller
he controller is instantiated before the pre-linking phase and can be accessed by other directives (see require attribute).
This allows the directives to communicate with each other and augment each other's behavior. 

require?
Require another directive and inject its controller as the fourth argument to the linking function. 
The require property can be a string, an array or an object:

controllerAs

Identifier name for a reference to the controller in the directive's scope. This allows the controller to be referenced from the directive template. This is especially useful when a directive is used as component, i.e. with an isolate scope. It's also possible to use it in a directive without an isolate / new scope, 
but you need to be aware that the controllerAs reference might overwrite a property that already exists on the parent scope

compile:

