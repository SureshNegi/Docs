link option?
<div ng-controller="Controller">
  Date format: <input ng-model="format"> <hr/>
  Current time is: <span my-current-time="format"></span>
</div>
angular.module('docsTimeDirective', [])
.controller('Controller', ['$scope', function($scope) {
  $scope.format = 'M/d/yy h:mm:ss a';
}])
.directive('myCurrentTime', ['$interval', 'dateFilter', function($interval, dateFilter) {
  function link(scope, element, attrs) {
    var format,
        timeoutId;
    function updateTime() {
      element.text(dateFilter(new Date(), format));
    }
    scope.$watch(attrs.myCurrentTime, function(value) {
      format = value;
      updateTime();
    });
    element.on('$destroy', function() {
      $interval.cancel(timeoutId);
    });
    // start the UI update process; save the timeoutId for canceling
    timeoutId = $interval(function() {
      updateTime(); // update DOM
    }, 1000);
  }
  return {
    link: link
  };
}]);

Directives that want to modify the DOM typically use the link option to register DOM listeners as well as update the DOM.
It is executed after the template has been cloned and is where directive logic will be put.
link takes a function(call back function) with the following signature, 
function link(scope, element, attrs, controller, transcludeFn) { ... }
    scope is an AngularJS scope object.
    element is the jqLite-wrapped element that this directive matches.
    attrs is a hash object with key-value pairs of normalized attribute names and their corresponding attribute values.
    controller is the directive's required controller instance(s) or its own controller (if any). The exact value depends on the directive's require property.
    transcludeFn is a transclude linking function pre-bound to the correct transclusion scope.
  
  
    

