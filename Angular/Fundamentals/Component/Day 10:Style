Example Styles in component metadata:
@Component({
  selector: 'app-root',
  template: `
    <h1>Tour of Heroes</h1>
    <app-hero-main [hero]="hero"></app-hero-main>
  `,
  styles: ['h1 { font-weight: normal; }']
})
export class HeroAppComponent {
/* . . . */
}

Special selectors:
Component styles have a few special selectors from the world of shadow DOM style scoping 

:host
Use the :host pseudo-class selector to target styles in the element that hosts the component
:host {
  display: block;
  border: 1px solid black;
}
The :host selector is the only way to target the host element

Style files in component metadata: styleUrls: ['./hero-app.component.css']

CSS @imports:
/* The AOT compiler needs the `./` to show that this is local */
@import './hero-details-box.css';

Non-CSS style files:If you're building with the CLI, you can write style files in sass, less, or stylus 
and specify those files in the @Component.styleUrls metadata
@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.scss']
})
...
